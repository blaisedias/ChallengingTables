
# ChallengingTables specification file
# Formatting Rules:
# 1. The '#' character is the start of a comment all text after that is ignored
# 2. a contiguous sequence of ',',whitespace is interpreted as single space.
# 3. level specification is 
#       Level text
# 4. sum specification is  
#   sum_type, count, numbers, numbers, ... 
#       where
#          SumType is one of 
#                   'Multiply2',
#                   'Multiply3',
#                   'Divide2',
#                   'FractionOf',
#                   'PercentOf',
#                   'FractionOfFraction',
#                   'Cubed',
#                   'Squared',
#                   'PowerOf',
#                   'PowerOff',
#                   'SquareRoot',
#                   'CubeRoot',
#          count is the number of times sum type is repeated
#          numbers are one of
#            a sequence, i.e  [number1, number2, number3, ......]
#          OR
#            a range (firstNumber, lastNumber, step)
#               example:
#               (1, 6, 1) expands to 1,2,3,4,5,6
#               (1, 6, 2) expands to 1,3,5
# 
# To aid readability, you can add "labels" and write something like 
#   "Sum=Multiply2  Count= 11   Numbers= a=(11, 19) b=(11, 19, 1)"
#   "Type:=Multiply2  Repeat:= 11   Ranges:= a=(11, 19) b=(11, 19, 1)"
# the "labels" are ignored, and should be alphabets and end with
# a ':' or '='.
# For increased flexibilty the script doesn't police repeat sum specifications,
# this makes it possible to create test sums of the same type but with different
# ranges which can be useful.
Level:= 13

# a × b
Type:= Multiply2, Count:= 30,  Numbers:= a=(2, 12) b=(2, 12, 1) 

# a × b × c
#Type:= Multiply3, Count:= 0, Numbers:= a=(2, 9, 1) b=(2, 9, 1) c=(2, 9, 1) 

# A ÷ b  where A = (a  × b)
Type:= Divide2, Count:= 23, Numbers:= a=(2, 12, 1) b=(2, 12, 1) 
# A = (4 ... 144)

# a/b of C where C = (b × c) to get a whole number
Type:= FractionOf, Count:= 13, Numbers:= a=(1, 4, 1) b=(2, 6, 1) c=(2, 12, 1)
# C is a number in the range (4 to 120) which is a multiple of b

# a % of b
Type:= PercentOf, Count:= 3, Numbers:= a=(10, 100, 10) b=(1, 200, 1)
# a expands to (10, 15, 20, 25, ... 100)

# b - (a % of b)
#Type:= PercentOff, Count:= 0, Numbers:= a=[10, 15, 25, 50, 75] b=(1, 200, 1)
# a expands to (10, 15, 20, 25, ... 100)

# (a/b) × (c/d)
Type:= FractionOfFraction, Count:= 1, Numbers:= a=(1, 3, 1) b=(2, 4, 1) c=(1, 3, 1) d=(2, 4, 1)

## a raised to b, squares, cubes ...
#Type:= PowerOf, Count:= 18, Numbers:= a=(2, 20, 1) b=[2, 3]
## b is the sequence 2, 3 so this generates squares and cubes

# a squared
Type:= Squared, Count:= 7, Numbers:= a=(2, 12, 1) b=[2, 2]

# a cubed
Type:= Cubed, Count:= 8, Numbers:= a=(2, 12, 1) b=[3, 3]

# 2√A   A = a squared
Type:= SquareRoot, Count:= 11, Numbers:= a=(2, 12, 1)
# a expands to (4, 9, 25, ... 400)

# 3√A  A = a cubed
Type:= CubeRoot, Count:= 4, Numbers:= a=(2, 8, 1)
# a expands to (8, 27, 125, ... 8000)

